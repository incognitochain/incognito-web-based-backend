version: "2.2"
services:
  worker:
    image: servicebe
    build:
      context: ./service
      dockerfile: Dockerfile
    working_dir: /home
    entrypoint: [./run.sh]
    volumes:
      - ./ggc.json:/home/ggc.json
    env_file:
      - service.env
    environment:
      MODE: "submitworker"
    depends_on:
      - mongo
  watcher:
    image: servicebe
    working_dir: /home
    entrypoint: [./run.sh]
    volumes:
      - ./ggc.json:/home/ggc.json
    env_file:
      - service.env
    environment:
      MODE: "submitwatcher"
    depends_on:
      - mongo

  feeestimator:
    image: servicebe
    working_dir: /home
    entrypoint: [./run.sh]
    volumes:
      - ./ggc.json:/home/ggc.json
    env_file:
      - service.env
    environment:
      MODE: "feeestimator"
    depends_on:
      - mongo

  api:
    image: servicebe
    working_dir: /home
    entrypoint: [./run.sh]
    volumes:
      - ./ggc.json:/home/ggc.json
    env_file:
      - service.env
    environment:
      MODE: "api"
    depends_on:
      - mongo

  nginx-server:
    image: nginx-load-balancer
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - 9898:80
    restart: unless-stopped
    depends_on:
      - api
      - mongo
      
  mongo:
    image: mongo
    restart: always
    volumes:
      - ./data/mongodb:/data/db
      - ./data/mongodb_config:/data/configdb
    env_file:
      - service.env
  mongo-express:
    image: mongo-express
    restart: always
    env_file:
      - service.env
    ports:
      - 9897:8081


  pancakeswapep:
    image: 0xbahamoot/pancakeswapep
    restart: always

  uniswapep:
    image: 0xbahamoot/uniswapep
    restart: always
